{"timestamp":"2025-05-14T02:53:30.974660","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-14T02:53:30.975075","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-14T02:53:33.094585Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.094939Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.095064Z","level":"info","event":"Current task name:train_model","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.095194Z","level":"info","event":"Dag name:weather_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126377Z","level":"error","event":"2025/05/14 02:53:33 WARNING mlflow.utils.git_utils: Failed to import Git (the Git executable is probably not on your PATH), so Git SHA is not available. Error: Failed to initialize: Bad git executable.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126582Z","level":"error","event":"The git executable must be specified in one of the following ways:","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126636Z","level":"error","event":"    - be included in your $PATH","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126672Z","level":"error","event":"    - be set via $GIT_PYTHON_GIT_EXECUTABLE","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126705Z","level":"error","event":"    - explicitly set via git.refresh(<full-path-to-git-executable>)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126741Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126775Z","level":"error","event":"All git commands will error until this is rectified.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126807Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126838Z","level":"error","event":"This initial message can be silenced or aggravated in the future by setting the","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126907Z","level":"error","event":"$GIT_PYTHON_REFRESH environment variable. Use one of the following values:","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126940Z","level":"error","event":"    - quiet|q|silence|s|silent|none|n|0: for no message or exception","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.126974Z","level":"error","event":"    - warn|w|warning|log|l|1: for a warning message (logging level CRITICAL, displayed by default)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.127005Z","level":"error","event":"    - error|e|exception|raise|r|2: for a raised exception","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.127037Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.127068Z","level":"error","event":"Example:","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.127099Z","level":"error","event":"    export GIT_PYTHON_REFRESH=quiet","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.127131Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.218632","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_regression.py:1266: UndefinedMetricWarning: R^2 score is not well-defined with less than two samples.\n  warnings.warn(msg, UndefinedMetricWarning)\n","logger":"py.warnings"}
{"timestamp":"2025-05-14T02:53:33.245755Z","level":"info","event":"Training R¬≤ score: 1.000","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.246322Z","level":"info","event":"Testing R¬≤ score: nan","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:33.246446Z","level":"info","event":"Model saved to data/model.pkl","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:37.846337Z","level":"error","event":"\u001b[31m2025/05/14 02:53:37 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T02:53:37.916215Z","level":"info","event":"üèÉ View run casual-shrew-492 at: http://mlflow:5000/#/experiments/0/runs/ded092b2b0d4486b888efef453d8cfa2","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:37.916902Z","level":"info","event":"üß™ View experiment at: http://mlflow:5000/#/experiments/0","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:37.936132","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-05-14T02:53:37.961481Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:37.961767Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:53:37.961839Z","level":"info","event":"Task operator:<Task(PythonOperator): train_model>","chan":"stdout","logger":"task"}
