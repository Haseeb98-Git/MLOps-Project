{"timestamp":"2025-05-14T02:52:54.029240","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-14T02:52:54.030167","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-14T02:52:55.649573Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:52:55.649703Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:52:55.649748Z","level":"info","event":"Current task name:collect_weather_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:52:55.649786Z","level":"info","event":"Dag name:weather_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:52:55.635113","level":"info","event":"Starting weather data collection","logger":"root"}
{"timestamp":"2025-05-14T02:52:56.738235","level":"info","event":"Weather data collected and saved successfully","logger":"root"}
{"timestamp":"2025-05-14T02:52:56.738810","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-05-14T02:52:56.751308Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:52:56.752106Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T02:52:56.752248Z","level":"info","event":"Task operator:<Task(PythonOperator): collect_weather_data>","chan":"stdout","logger":"task"}
