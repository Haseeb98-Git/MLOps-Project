{"timestamp":"2025-05-11T14:46:24.160195","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-11T14:46:24.160708","level":"info","event":"Filling up the DagBag from /home/haseeb/mlops-project/airflow/dags/weather_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-11T14:46:24.690933Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-11T14:46:24.691041Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-11T14:46:24.691073Z","level":"info","event":"Current task name:collect_weather_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-11T14:46:24.691103Z","level":"info","event":"Dag name:weather_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-11T14:46:24.671028","level":"info","event":"Starting weather data collection","logger":"root"}
{"timestamp":"2025-05-11T14:46:25.628863","level":"info","event":"Weather data collected and saved successfully","logger":"root"}
{"timestamp":"2025-05-11T14:46:25.629336","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-05-11T14:46:25.648268Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-11T14:46:25.648372Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-11T14:46:25.648404Z","level":"info","event":"Task operator:<Task(PythonOperator): collect_weather_data>","chan":"stdout","logger":"task"}
